
                 ---------------------------------------------
                 TINKER -- Software Tools for Molecular Design
                 ---------------------------------------------

                    Jay Ponder Lab, Department of Chemistry,
           Washington University, Saint Louis, Missouri 63130 U.S.A.

     TINKER is a complete package for performing empirical force field
molecular mechanics and dynamics calculations. It is intended to serve as a
platform for algorithm development and parameterization, while still being
efficient enough for most production work. Available potentials include Amber
ff94, ff96, ff98 and ff99, ff99sb, CHARMM19, CHARMM22/CMAP, DANG, MM2, MM3,
MMFF, OPLS-UA, OPLS-AA and our AMOEBA 2004, 2009 and 2013 polarizable atomic
multipole models. Other force fields can be added via new parameter files,
and some are currently under consideration.

     TINKER programs perform many functions including: (1) energy minimization
over Cartesian coordinates, torsional angles or rigid bodies via conjugate
gradient, variable metric or truncated Newton methods, (2) molecular,
stochastic and rigid body dynamics with periodic boundaries temperature/
pressure control, (3) multiple time step RESPA integration for more efficient
MD simulation, (4) normal mode vibrational analysis, (5) distance geometry
including an efficient random pairwise metrization, (6) building protein and
nucleic acid structures from sequence, (7) analysis and breakdown of single
point potential energies, (8) verification of analytical derivatives of
standard and user defined potentials, (9) location of a transition states
between two minima, (10) potential energy surface search via conformation
scanning methods, (11) free energy calculations via Bennett acceptance ratio,
free energy perturbation or weighted histogram analysis, (12) analysis of and
comparison to electrostatic potentials, (13) fitting of intra- and
intermolecular potential parameters to structural and thermodynamic data, and
(14) global optimization via simulated annealing, Monte Carlo minimization,
and energy surface smoothing methods.

     Analytical Cartesian derivatives through the Hessian and analytical
torsional gradients are available. Energy minimization and vibrational analysis
can be performed in either Cartesian or torsional space. The user can define
atom groups and compute scaled energies between or within groups. Atomic
multipoles through the quadrupole and induced dipole polarization, as well as
simpler electrostatic models, are implemented. Restraint potentials may be
included in all calculation types, and partial structures can be frozen in
space. The molecular volume and surface area as well as their derivatives are
included. Both replicative and image boundary conditions are supported for all
unit cell types and for truncated octahedra. Nonbonded interactions can be
splined over distance windows, and treated via Method of Lights or pair
neighbor lists. Particle mesh Ewald (PME) is available for partial charges and
for polarizable atomic multipoles. Poisson-Boltzmann electrostatic
calculations are available through an interface to the APBS package. Various
continuum solvation models, such as GB/SA, GK and PB, are implemented. User-
defined potentials are easily added.

     The central component of the TINKER package is a modular set of callable
routines which allow the manipulation of coordinates and evaluation of
potential energy and derivatives in a straightforward fashion. The author
welcomes development by others of new modules for TINKER and is willing to
serve as a resource and distribution center for such development efforts.

     A complete Java GUI for TINKER, call Force Field Explorer or FFE, is
available as an adjunct to the basic package. FFE is tightly integrated with
the TINKER code via a socket mechanism, and can be used to setup, launch and
visualize TINKER calculations. The GUI allows for interactive use on a single
machine, as well as connection to jobs running on a remote server.

     The TINKER package is written in a portable Fortran 95 dialect that
makes use of dynamic memory allocation. TINKER uses OpenMP to parallelize
selected CPU intensive calculations on shared-memory multiple core systems.
Program control is via an optional Keyword Parameter. Auxiliary programs are
provided to convert Protein Data Bank files to and from the TINKER formats.
TINKER coordinate files are directly supported by the VMD, PyMOL and MOLDEN
modeling packages. TINKER structures are also compatible with the ChemDraw &
ChemOffice programs.

Selected References:

(1)  Polarizable Atomic Multipole-based AMOEBA Force Field for Proteins,
     Y. Shi, Z. Xia, J. Zhang, R. Best, C. Wu, J. W. Ponder and P. Ren,
     J. Chem. Theory Comput., 9, 4046-4063 (2013).

(2)  Polarizable Atomic Multipole-based Molecular Mechanics for Organic
     Molecules, P. Ren, C. Wu and J. W. Ponder, J. Chem. Theory Comput.,
     7, 3143-3461 (2011).

(3)  Current Status of the AMOEBA Polarizable Force Field, J. W. Ponder,
     C. Wu, P. Ren, V. S. Pande, J. D. Chodera, D. L. Mobley, M. J. Schnieders,
     I. Haque, D. S. Lambrecht, R. A. DiStatio, Jr., M. Head-Gordon,
     G. N. I. Clark, M. E. Johnson and T. Head-Gordon, J. Phys. Chem. B, 114,
     2549-2564 (2010).

(4)  Polarizable Atomic Multipole Water Model for Molecular Mechanics
     Simulation, P. Ren and J. W. Ponder, J. Phys. Chem. B, 107, 5933-5947
     (2003).

(5)  Analysis and Application of Potential Energy Smoothing for Global
     Optimization, R. V. Pappu, R. K. Hart and J. W. Ponder, J. Phys. Chem. B,
     102, 9725-9742 (1998).

(6)  Algorithms for Calculating Excluded Volume and Its Derivatives as a
     Function of Molecular Conformation and Their Use in Energy Minimization,
     C. E. Kundrot, J. W. Ponder and F. M. Richards, J. Comput. Chem., 12,
     402-409 (1991).

(7)  An Efficient Newton-like Method for Molecular Mechanics Energy
     Minimization of Large Molecules, J. W. Ponder and F. M. Richards,
     J. Comput. Chem., 8, 1016-1024 (1987).

Availability:   Executables and Source at http://dasher.wustl.edu/tinker/
Version:        TINKER 6.3 and Force Field Explorer 6.3 of February 2014
Language:       Fortran 95 with common extensions and some C;
                FFE GUI in Java with Java 3D extensions
Lines of Code:  200,000 in TINKER Package (Fortran 95 and some C)
                30,000 in Force Field Explorer (Java and some C)
